{"ast":null,"code":"var _jsxFileName = \"/Users/joshuasaji/Projects/React Native/project/app/src/components/Main.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  let [ingredients, setIngredients] = useState(\"\");\n  let [numRecipes, setNumRecipes] = useState(0);\n  let [recipes, setRecipes] = useState([]);\n  let [loading, setLoading] = useState(false);\n  let fetchRecipes = ingredients => {\n    fetch(\"http://localhost:8000/get-recipes\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        ingredients: ingredients,\n        numRecipes: numRecipes\n      }),\n      headers: {\n        'Content-Type': \"application/json\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"michelinGPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter at least three ingredients to generate possible recipes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), \"\\xA0\\u0330\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"ingredients\",\n        name: \"ingredients\",\n        placeholder: \"Ingredients\",\n        onChange: e => setIngredients(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"numRecipes\",\n        name: \"numRecipes\",\n        placeholder: \"# of Recipes\",\n        type: \"number\",\n        onChange: e => setNumRecipes(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"experienceLvl\",\n        name: \"experienceLvl\",\n        placeholder: \"# of Recipes\",\n        type: \"\",\n        onChange: e => setNumRecipes(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit\",\n        onClick: e => fetchRecipes(ingredients),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"I/AS6NbL9gFxKrNPtO4R2I/9IBw=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Main","_s","ingredients","setIngredients","numRecipes","setNumRecipes","recipes","setRecipes","loading","setLoading","fetchRecipes","fetch","method","body","JSON","stringify","headers","then","response","json","data","children","className","fileName","_jsxFileName","lineNumber","columnNumber","name","placeholder","onChange","e","target","value","type","onClick","_c","$RefreshReg$"],"sources":["/Users/joshuasaji/Projects/React Native/project/app/src/components/Main.js"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react'\n\nexport default function Main() {\n  \n  let [ ingredients, setIngredients ] = useState(\"\");\n  let [ numRecipes, setNumRecipes ] = useState(0);\n  let [ recipes, setRecipes ] = useState([])\n  let [ loading, setLoading ] = useState(false);\n\n  let fetchRecipes = (ingredients) => {\n    fetch(\"http://localhost:8000/get-recipes\", {\n        method: \"POST\", \n        body: JSON.stringify({\n            ingredients:ingredients,\n            numRecipes:numRecipes\n        }),\n        headers: {\n            'Content-Type': \"application/json\"\n        }\n    })\n    .then(response => {\n        return response.json()\n     })\n    .then(data => {\n        \n    })\n\n  };\n\n  return (\n    <div>\n        <div className=\"header\">\n            <h1>michelinGPT</h1>\n            <p>Enter at least three ingredients to generate possible recipes.</p>\n        </div> ̰\n        <div className=\"body\">\n        <input className=\"ingredients\" name=\"ingredients\" placeholder=\"Ingredients\" onChange={e => setIngredients(e.target.value)} />\n        <input className=\"numRecipes\" name=\"numRecipes\" placeholder=\"# of Recipes\"  type='number' onChange={e => setNumRecipes(e.target.value)} />\n        <input className=\"experienceLvl\" name=\"experienceLvl\" placeholder=\"# of Recipes\"  type='' onChange={e => setNumRecipes(e.target.value)} />\n            <button className=\"submit\" onClick={e => fetchRecipes(ingredients)}>Submit</button>\n        </div>\n\n        <div className=\"recipes\">\n        \n        </div>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}