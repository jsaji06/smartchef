{"ast":null,"code":"var _jsxFileName = \"/Users/joshuasaji/Projects/React Native/project/app/src/components/SelectedRecipe.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport RecipeHeader from './RecipeHeader';\nimport AssumedIngredient from './AssumedIngredient';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SelectedRecipe(props) {\n  _s();\n  let [recipe, setRecipe] = useState(props.recipe);\n  let assumedIngredientsName = recipe.assumed_ingredients;\n  let assumedIngredientsQuantity = recipe.assumed_quantities;\n  let assumedIngredientsQuantityUnit = recipe.assumed_quantities_unit;\n  let assumedIngredientsMap = assumedIngredientsName.map((ingredient_name, i) => {\n    return {\n      \"ingredient\": ingredient_name,\n      \"quantity\": recipe.assumed_quantities[i],\n      \"unit\": recipe.assumed_quantities_unit[i],\n      \"edited\": false,\n      \"removed\": false\n    };\n  });\n  let [assumedIngredientsState, setAssumedIngredients] = useState(assumedIngredientsMap);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectedRecipeContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"backBtn\",\n        onClick: () => props.setState(null),\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RecipeHeader, {\n        recipe: recipe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ingredientsAndSteps\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"steps\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Steps to Cook\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), recipe.steps.map(step => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: step\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 22\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assumedIngredients\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ingredients\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Your Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), recipe.users_ingredients.map(step => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: step\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"assumed\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Assumed Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), assumedIngredientsState.map((step, i) => {\n              return /*#__PURE__*/_jsxDEV(AssumedIngredient, {\n                ingredientList: assumedIngredientsState,\n                ingredientInfo: step,\n                changeAssumedIngredients: setAssumedIngredients,\n                ingredientIndex: i\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                let editedItems = [];\n                let changedItems = [];\n                let deletedItems = [];\n                for (let i = 0; i < assumedIngredientsState.length; i++) {\n                  if (assumedIngredientsState[i].edited) {\n                    let str = assumedIngredientsState[i].quantity + ' ' + assumedIngredientsState[i].unit + ' ' + assumedIngredientsState[i].ingredient;\n                    editedItems.push(str);\n                    let origIng = assumedIngredientsName[i] + ' ' + assumedIngredientsQuantity[i] + ' ' + assumedIngredientsQuantityUnit[i];\n                    changedItems.push(origIng);\n                  } else if (assumedIngredientsState[i].deleted) {\n                    let str = assumedIngredientsState[i].quantity + ' ' + assumedIngredientsState[i].unit + ' ' + assumedIngredientsState[i].ingredient;\n                    deletedItems.push(str);\n                  }\n                  fetch('http://localhost:8000/edit-recipe', {\n                    method: \"POST\",\n                    headers: {\n                      'Content-Type': \"application/json\"\n                    },\n                    body: JSON.stringify({\n                      'recipe': recipe,\n                      'excluded_ingredients': deletedItems,\n                      \"edited_items\": editedItems,\n                      \"changed_items\": changedItems\n                    })\n                  }).then(response => {\n                    return response.json();\n                  }).then(data => {\n                    console.log(data);\n                    setRecipe(data.recipe);\n                  });\n                }\n              },\n              children: \"Remove Item(s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectedRecipe, \"aqEN/T9ExPM/kkGsl67QbJpQyH8=\");\n_c = SelectedRecipe;\nvar _c;\n$RefreshReg$(_c, \"SelectedRecipe\");","map":{"version":3,"names":["React","FontAwesomeIcon","faEdit","faTrash","RecipeHeader","AssumedIngredient","useState","jsxDEV","_jsxDEV","SelectedRecipe","props","_s","recipe","setRecipe","assumedIngredientsName","assumed_ingredients","assumedIngredientsQuantity","assumed_quantities","assumedIngredientsQuantityUnit","assumed_quantities_unit","assumedIngredientsMap","map","ingredient_name","i","assumedIngredientsState","setAssumedIngredients","className","children","id","onClick","setState","fileName","_jsxFileName","lineNumber","columnNumber","steps","step","users_ingredients","ingredientList","ingredientInfo","changeAssumedIngredients","ingredientIndex","editedItems","changedItems","deletedItems","length","edited","str","quantity","unit","ingredient","push","origIng","deleted","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","_c","$RefreshReg$"],"sources":["/Users/joshuasaji/Projects/React Native/project/app/src/components/SelectedRecipe.js"],"sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\nimport RecipeHeader from './RecipeHeader';\nimport AssumedIngredient from './AssumedIngredient';\nimport { useState } from 'react';\n\nexport default function SelectedRecipe(props) {\n  let [recipe, setRecipe] = useState(props.recipe);\n\n  let assumedIngredientsName = recipe.assumed_ingredients\n  let assumedIngredientsQuantity = recipe.assumed_quantities\n  let assumedIngredientsQuantityUnit = recipe.assumed_quantities_unit\n  let assumedIngredientsMap = assumedIngredientsName.map((ingredient_name, i) => { return { \"ingredient\": ingredient_name, \"quantity\": recipe.assumed_quantities[i], \"unit\": recipe.assumed_quantities_unit[i], \"edited\": false, \"removed\": false } })\n  let [assumedIngredientsState, setAssumedIngredients] = useState(assumedIngredientsMap)\n\n  return (\n    <div className=\"container\">\n\n      <div className=\"selectedRecipeContainer\">\n\n        <button id=\"backBtn\" onClick={() => props.setState(null)}>←</button>\n        <RecipeHeader recipe={recipe} />\n        <div className=\"ingredientsAndSteps\">\n          <div className=\"steps\">\n            <h3>Steps to Cook</h3>\n            {recipe.steps.map(step => {\n              return <p>{step}</p>\n            })}\n          </div>\n          <div className=\"assumedIngredients\">\n            <div className=\"ingredients\">\n              <h3>Your Ingredients</h3>\n              {recipe.users_ingredients.map(step => {\n                return <p>{step}</p>\n              })}\n            </div>\n            <div className=\"assumed\">\n              <h3>Assumed Ingredients</h3>\n\n              {assumedIngredientsState.map((step, i) => {\n\n                return (\n                  <AssumedIngredient ingredientList={assumedIngredientsState} ingredientInfo={step} changeAssumedIngredients={setAssumedIngredients} ingredientIndex={i} />\n                )\n              })}\n              <button onClick={() => {\n                let editedItems = [];\n                let changedItems = [];\n                let deletedItems = [];\n\n                for (let i = 0; i < assumedIngredientsState.length; i++) {\n                  if (assumedIngredientsState[i].edited) {\n                    let str = assumedIngredientsState[i].quantity + ' ' + assumedIngredientsState[i].unit + ' ' + assumedIngredientsState[i].ingredient\n                    editedItems.push(str)\n                    let origIng = assumedIngredientsName[i] + ' ' + assumedIngredientsQuantity[i] + ' ' + assumedIngredientsQuantityUnit[i]\n                    changedItems.push(origIng)\n                  }\n                  else if(assumedIngredientsState[i].deleted) {\n                    let str = assumedIngredientsState[i].quantity + ' ' + assumedIngredientsState[i].unit + ' ' + assumedIngredientsState[i].ingredient\n                    deletedItems.push(str)\n                  }\n                  fetch('http://localhost:8000/edit-recipe', {\n                    method: \"POST\", headers: {\n                        'Content-Type': \"application/json\"\n                    }, body: JSON.stringify({ 'recipe': recipe, 'excluded_ingredients': deletedItems, \"edited_items\": editedItems, \"changed_items\":changedItems })\n                })\n                    .then(response => {\n                        return response.json()\n                    })\n                    .then(data => {\n                      console.log(data)\n                      setRecipe(data.recipe)\n                    })\n                }\n              }}>Remove Item(s)</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}