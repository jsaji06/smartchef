{"ast":null,"code":"var _jsxFileName = \"/Users/joshuasaji/Projects/React Native/project/app/src/components/RecipeView.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport SelectedRecipe from \"./SelectedRecipe\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {};\nexport default function RecipeView(props) {\n  let recipe = props.recipe;\n  return selectedRecipe ? /*#__PURE__*/_jsxDEV(SelectedRecipe, {\n    state: props.state,\n    setState: props.setState\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 28\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: recipe.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"CALORIES: \", recipe.calories, \" cal | CARBS: \", recipe.carbs, \"g | FAT: \", recipe.fat, \"g | PROTEIN: \", recipe.protein, \"g\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: recipe.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        e.preventDefault();\n        props.setState(true);\n      },\n      children: \"Go to Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = RecipeView;\nvar _c;\n$RefreshReg$(_c, \"RecipeView\");","map":{"version":3,"names":["React","useState","SelectedRecipe","jsxDEV","_jsxDEV","styles","RecipeView","props","recipe","selectedRecipe","state","setState","fileName","_jsxFileName","lineNumber","columnNumber","style","children","title","calories","carbs","fat","protein","description","onClick","e","preventDefault","_c","$RefreshReg$"],"sources":["/Users/joshuasaji/Projects/React Native/project/app/src/components/RecipeView.js"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport SelectedRecipe from \"./SelectedRecipe\"\n\nconst styles = {\n    \n}\n\nexport default function RecipeView(props) {\n  \n  let recipe = props.recipe\n  return selectedRecipe ? (<SelectedRecipe state={props.state}  setState={props.setState} />) : (\n    <div style={styles}>\n        <h2>{recipe.title}</h2>\n        <h3>CALORIES: {recipe.calories} cal | CARBS: {recipe.carbs}g | FAT: {recipe.fat}g | PROTEIN: {recipe.protein}g</h3>\n        <p>{recipe.description}</p>\n        <button onClick={e => {\n            e.preventDefault();\n            props.setState(true);Â \n        }}>Go to Recipe</button>\n    </div>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,cAAc,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,MAAM,GAAG,CAEf,CAAC;AAED,eAAe,SAASC,UAAUA,CAACC,KAAK,EAAE;EAExC,IAAIC,MAAM,GAAGD,KAAK,CAACC,MAAM;EACzB,OAAOC,cAAc,gBAAIL,OAAA,CAACF,cAAc;IAACQ,KAAK,EAAEH,KAAK,CAACG,KAAM;IAAEC,QAAQ,EAAEJ,KAAK,CAACI;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBACxFX,OAAA;IAAKY,KAAK,EAAEX,MAAO;IAAAY,QAAA,gBACfb,OAAA;MAAAa,QAAA,EAAKT,MAAM,CAACU;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBX,OAAA;MAAAa,QAAA,GAAI,YAAU,EAACT,MAAM,CAACW,QAAQ,EAAC,gBAAc,EAACX,MAAM,CAACY,KAAK,EAAC,WAAS,EAACZ,MAAM,CAACa,GAAG,EAAC,eAAa,EAACb,MAAM,CAACc,OAAO,EAAC,GAAC;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnHX,OAAA;MAAAa,QAAA,EAAIT,MAAM,CAACe;IAAW;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BX,OAAA;MAAQoB,OAAO,EAAEC,CAAC,IAAI;QAClBA,CAAC,CAACC,cAAc,CAAC,CAAC;QAClBnB,KAAK,CAACI,QAAQ,CAAC,IAAI,CAAC;MACxB,CAAE;MAAAM,QAAA,EAAC;IAAY;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CACN;AACH;AAACY,EAAA,GAduBrB,UAAU;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}