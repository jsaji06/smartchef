{"ast":null,"code":"var _jsxFileName = \"/Users/joshuasaji/Projects/React Native/project/app/src/components/SelectedRecipe.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport RecipeHeader from './RecipeHeader';\nimport AssumedIngredient from './AssumedIngredient';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SelectedRecipe(props) {\n  _s();\n  let [recipe, setRecipe] = useState(props.recipe);\n  let assumedIngredients = recipe.assumed_ingredients;\n  assumedIngredients = assumedIngredients.map((ingredient_name, i) => {\n    return {\n      \"ingredient\": ingredient_name,\n      \"quantity\": recipe.assumed_quantities[i],\n      \"unit\": recipe.assumed_quantities_unit[i],\n      \"edited\": false,\n      \"removed\": false\n    };\n  });\n  let [assumedIngredientsState, setAssumedIngredients] = useState(assumedIngredients);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectedRecipeContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"backBtn\",\n        onClick: () => props.setState(null),\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RecipeHeader, {\n        recipe: recipe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ingredientsAndSteps\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"steps\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Steps to Cook\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), recipe.steps.map(step => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: step\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 22\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assumedIngredients\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ingredients\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Your Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), recipe.users_ingredients.map(step => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: step\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"assumed\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Assumed Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), assumedIngredientsState.map((step, i) => {\n              return /*#__PURE__*/_jsxDEV(AssumedIngredient, {\n                ingredientList: assumedIngredientsState,\n                ingredientInfo: step,\n                changeAssumedIngredients: setAssumedIngredients,\n                ingredientIndex: i\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                let editedItems = [];\n                let changedItems = [];\n                let deletedItems = [];\n                for (let i = 0; i < assumedIngredientsState.length; i++) {\n                  console.log(assumedIngredientsState.length);\n                  if (assumedIngredientsState[i].edited) {\n                    let str = assumedIngredientsState[i].quantity + ' ' + assumedIngredientsState[i].unit + ' ' + assumedIngredientsState[i].ingredient;\n                    editedItems.push(str);\n                    let origIng = assumedIngredients.assumed_ingredients[i] + ' ' + assumedIngredients.assumed_quantities[i] + ' ' + assumedIngredients.assumed_quantities_unit[i];\n                    changedItems.push(origIng);\n                  } else if (assumedIngredientsState[i].deleted) {\n                    let str = assumedIngredientsState[i].quantity + ' ' + assumedIngredientsState[i].unit + ' ' + assumedIngredientsState[i].ingredient;\n                    deletedItems.push(str);\n                  }\n                  fetch('http://localhost:8000/edit-recipe', {\n                    method: \"POST\",\n                    headers: {\n                      'Content-Type': \"application/json\"\n                    },\n                    body: JSON.stringify({\n                      'recipe': recipe,\n                      'excluded_ingredients': deletedItems,\n                      \"edited_items\": editedItems,\n                      \"changed_items\": changedItems\n                    })\n                  }).then(response => {\n                    return response.json();\n                  }).then(data => {\n                    console.log(data);\n                  });\n                }\n              },\n              children: \"Remove Item(s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectedRecipe, \"eY8YIinYB3UXiptoAn6323bjFYI=\");\n_c = SelectedRecipe;\nvar _c;\n$RefreshReg$(_c, \"SelectedRecipe\");","map":{"version":3,"names":["React","FontAwesomeIcon","faEdit","faTrash","RecipeHeader","AssumedIngredient","useState","jsxDEV","_jsxDEV","SelectedRecipe","props","_s","recipe","setRecipe","assumedIngredients","assumed_ingredients","map","ingredient_name","i","assumed_quantities","assumed_quantities_unit","assumedIngredientsState","setAssumedIngredients","className","children","id","onClick","setState","fileName","_jsxFileName","lineNumber","columnNumber","steps","step","users_ingredients","ingredientList","ingredientInfo","changeAssumedIngredients","ingredientIndex","editedItems","changedItems","deletedItems","length","console","log","edited","str","quantity","unit","ingredient","push","origIng","deleted","fetch","method","headers","body","JSON","stringify","then","response","json","data","_c","$RefreshReg$"],"sources":["/Users/joshuasaji/Projects/React Native/project/app/src/components/SelectedRecipe.js"],"sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\nimport RecipeHeader from './RecipeHeader';\nimport AssumedIngredient from './AssumedIngredient';\nimport { useState } from 'react';\n\nexport default function SelectedRecipe(props) {\n  let [recipe, setRecipe] = useState(props.recipe);\n  \n  let assumedIngredients = recipe.assumed_ingredients\n  assumedIngredients = assumedIngredients.map((ingredient_name, i) => { return { \"ingredient\": ingredient_name, \"quantity\": recipe.assumed_quantities[i], \"unit\": recipe.assumed_quantities_unit[i], \"edited\": false, \"removed\": false } })\n  let [assumedIngredientsState, setAssumedIngredients] = useState(assumedIngredients)\n\n\n\n  return (\n    <div className=\"container\">\n\n      <div className=\"selectedRecipeContainer\">\n\n        <button id=\"backBtn\" onClick={() => props.setState(null)}>←</button>\n        <RecipeHeader recipe={recipe} />\n        <div className=\"ingredientsAndSteps\">\n          <div className=\"steps\">\n            <h3>Steps to Cook</h3>\n            {recipe.steps.map(step => {\n              return <p>{step}</p>\n            })}\n          </div>\n          <div className=\"assumedIngredients\">\n            <div className=\"ingredients\">\n              <h3>Your Ingredients</h3>\n              {recipe.users_ingredients.map(step => {\n                return <p>{step}</p>\n              })}\n            </div>\n            <div className=\"assumed\">\n              <h3>Assumed Ingredients</h3>\n\n              {assumedIngredientsState.map((step, i) => {\n\n                return (\n                  <AssumedIngredient ingredientList={assumedIngredientsState} ingredientInfo={step} changeAssumedIngredients={setAssumedIngredients} ingredientIndex={i} />\n                )\n              })}\n              <button onClick={() => {\n                let editedItems = [];\n                let changedItems = [];\n                let deletedItems = [];\n\n                for (let i = 0; i < assumedIngredientsState.length; i++) {\n                  console.log(assumedIngredientsState.length)\n                  if (assumedIngredientsState[i].edited) {\n                    let str = assumedIngredientsState[i].quantity + ' ' + assumedIngredientsState[i].unit + ' ' + assumedIngredientsState[i].ingredient\n                    editedItems.push(str)\n                    let origIng = assumedIngredients.assumed_ingredients[i] + ' ' + assumedIngredients.assumed_quantities[i] + ' ' + assumedIngredients.assumed_quantities_unit[i]\n                    changedItems.push(origIng)\n                  }\n                  else if(assumedIngredientsState[i].deleted) {\n                    let str = assumedIngredientsState[i].quantity + ' ' + assumedIngredientsState[i].unit + ' ' + assumedIngredientsState[i].ingredient\n                    deletedItems.push(str)\n                  }\n                  fetch('http://localhost:8000/edit-recipe', {\n                    method: \"POST\", headers: {\n                        'Content-Type': \"application/json\"\n                    }, body: JSON.stringify({ 'recipe': recipe, 'excluded_ingredients': deletedItems, \"edited_items\": editedItems, \"changed_items\":changedItems })\n                })\n                    .then(response => {\n                        return response.json()\n                    })\n                    .then(data => {\n                        console.log(data);\n                    })\n                }\n              }}>Remove Item(s)</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,EAAEC,OAAO,QAAQ,mCAAmC;AACnE,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,cAAcA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC5C,IAAI,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAACI,KAAK,CAACE,MAAM,CAAC;EAEhD,IAAIE,kBAAkB,GAAGF,MAAM,CAACG,mBAAmB;EACnDD,kBAAkB,GAAGA,kBAAkB,CAACE,GAAG,CAAC,CAACC,eAAe,EAAEC,CAAC,KAAK;IAAE,OAAO;MAAE,YAAY,EAAED,eAAe;MAAE,UAAU,EAAEL,MAAM,CAACO,kBAAkB,CAACD,CAAC,CAAC;MAAE,MAAM,EAAEN,MAAM,CAACQ,uBAAuB,CAACF,CAAC,CAAC;MAAE,QAAQ,EAAE,KAAK;MAAE,SAAS,EAAE;IAAM,CAAC;EAAC,CAAC,CAAC;EACzO,IAAI,CAACG,uBAAuB,EAAEC,qBAAqB,CAAC,GAAGhB,QAAQ,CAACQ,kBAAkB,CAAC;EAInF,oBACEN,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,eAExBhB,OAAA;MAAKe,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBAEtChB,OAAA;QAAQiB,EAAE,EAAC,SAAS;QAACC,OAAO,EAAEA,CAAA,KAAMhB,KAAK,CAACiB,QAAQ,CAAC,IAAI,CAAE;QAAAH,QAAA,EAAC;MAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpEvB,OAAA,CAACJ,YAAY;QAACQ,MAAM,EAAEA;MAAO;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChCvB,OAAA;QAAKe,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClChB,OAAA;UAAKe,SAAS,EAAC,OAAO;UAAAC,QAAA,gBACpBhB,OAAA;YAAAgB,QAAA,EAAI;UAAa;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACrBnB,MAAM,CAACoB,KAAK,CAAChB,GAAG,CAACiB,IAAI,IAAI;YACxB,oBAAOzB,OAAA;cAAAgB,QAAA,EAAIS;YAAI;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UACtB,CAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNvB,OAAA;UAAKe,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACjChB,OAAA;YAAKe,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BhB,OAAA;cAAAgB,QAAA,EAAI;YAAgB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACxBnB,MAAM,CAACsB,iBAAiB,CAAClB,GAAG,CAACiB,IAAI,IAAI;cACpC,oBAAOzB,OAAA;gBAAAgB,QAAA,EAAIS;cAAI;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YACtB,CAAC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNvB,OAAA;YAAKe,SAAS,EAAC,SAAS;YAAAC,QAAA,gBACtBhB,OAAA;cAAAgB,QAAA,EAAI;YAAmB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAE3BV,uBAAuB,CAACL,GAAG,CAAC,CAACiB,IAAI,EAAEf,CAAC,KAAK;cAExC,oBACEV,OAAA,CAACH,iBAAiB;gBAAC8B,cAAc,EAAEd,uBAAwB;gBAACe,cAAc,EAAEH,IAAK;gBAACI,wBAAwB,EAAEf,qBAAsB;gBAACgB,eAAe,EAAEpB;cAAE;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAE7J,CAAC,CAAC,eACFvB,OAAA;cAAQkB,OAAO,EAAEA,CAAA,KAAM;gBACrB,IAAIa,WAAW,GAAG,EAAE;gBACpB,IAAIC,YAAY,GAAG,EAAE;gBACrB,IAAIC,YAAY,GAAG,EAAE;gBAErB,KAAK,IAAIvB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,uBAAuB,CAACqB,MAAM,EAAExB,CAAC,EAAE,EAAE;kBACvDyB,OAAO,CAACC,GAAG,CAACvB,uBAAuB,CAACqB,MAAM,CAAC;kBAC3C,IAAIrB,uBAAuB,CAACH,CAAC,CAAC,CAAC2B,MAAM,EAAE;oBACrC,IAAIC,GAAG,GAAGzB,uBAAuB,CAACH,CAAC,CAAC,CAAC6B,QAAQ,GAAG,GAAG,GAAG1B,uBAAuB,CAACH,CAAC,CAAC,CAAC8B,IAAI,GAAG,GAAG,GAAG3B,uBAAuB,CAACH,CAAC,CAAC,CAAC+B,UAAU;oBACnIV,WAAW,CAACW,IAAI,CAACJ,GAAG,CAAC;oBACrB,IAAIK,OAAO,GAAGrC,kBAAkB,CAACC,mBAAmB,CAACG,CAAC,CAAC,GAAG,GAAG,GAAGJ,kBAAkB,CAACK,kBAAkB,CAACD,CAAC,CAAC,GAAG,GAAG,GAAGJ,kBAAkB,CAACM,uBAAuB,CAACF,CAAC,CAAC;oBAC9JsB,YAAY,CAACU,IAAI,CAACC,OAAO,CAAC;kBAC5B,CAAC,MACI,IAAG9B,uBAAuB,CAACH,CAAC,CAAC,CAACkC,OAAO,EAAE;oBAC1C,IAAIN,GAAG,GAAGzB,uBAAuB,CAACH,CAAC,CAAC,CAAC6B,QAAQ,GAAG,GAAG,GAAG1B,uBAAuB,CAACH,CAAC,CAAC,CAAC8B,IAAI,GAAG,GAAG,GAAG3B,uBAAuB,CAACH,CAAC,CAAC,CAAC+B,UAAU;oBACnIR,YAAY,CAACS,IAAI,CAACJ,GAAG,CAAC;kBACxB;kBACAO,KAAK,CAAC,mCAAmC,EAAE;oBACzCC,MAAM,EAAE,MAAM;oBAAEC,OAAO,EAAE;sBACrB,cAAc,EAAE;oBACpB,CAAC;oBAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;sBAAE,QAAQ,EAAE9C,MAAM;sBAAE,sBAAsB,EAAE6B,YAAY;sBAAE,cAAc,EAAEF,WAAW;sBAAE,eAAe,EAACC;oBAAa,CAAC;kBACjJ,CAAC,CAAC,CACGmB,IAAI,CAACC,QAAQ,IAAI;oBACd,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;kBAC1B,CAAC,CAAC,CACDF,IAAI,CAACG,IAAI,IAAI;oBACVnB,OAAO,CAACC,GAAG,CAACkB,IAAI,CAAC;kBACrB,CAAC,CAAC;gBACN;cACF,CAAE;cAAAtC,QAAA,EAAC;YAAc;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CA3EuBF,cAAc;AAAAsD,EAAA,GAAdtD,cAAc;AAAA,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}