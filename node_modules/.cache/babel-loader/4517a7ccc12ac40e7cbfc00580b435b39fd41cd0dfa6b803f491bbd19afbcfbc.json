{"ast":null,"code":"var _jsxFileName = \"/Users/joshuasaji/Projects/React Native/project/app/src/components/EditAssumedIngredient.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditAssumedIngredient(props) {\n  _s();\n  let [selectedQuantity, setSelectedQuantity] = useState(0);\n  let handleQuantityClassification = e => {\n    if (e.target.value == 'none') setSelectedQuantity(0);else if (e.target.value == 'weight') setSelectedQuantity(1);else if (e.target.value == 'volume') setSelectedQuantity(2);else if (e.target.value == 'general') setSelectedQuantity(3);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: props.quantity,\n      type: \"number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formFlex\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"quantityClassification\",\n        name: \"quantityClassification\",\n        onChange: e => handleQuantityClassification(e),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"none\",\n          children: \"None\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"weight\",\n          children: \"Weight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"volume\",\n          children: \"Volume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"general\",\n          children: \"General\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"weightQuantities\",\n        name: \"weightQuantities\",\n        style: {\n          'display': useState == 1 ? 'block' : 'hidden'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"kilograms\",\n          children: \"kg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pounds\",\n          children: \"lb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"grams\",\n          children: \"g\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"volumeQuantities\",\n        name: \"volumeQuantities\",\n        style: {\n          'display': useState == 2 ? 'block' : 'hidden'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ml\",\n          children: \"millileters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"l\",\n          children: \"liters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cups\",\n          children: \"cups\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"tbsp\",\n          children: \"tbsp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"tsp\",\n          children: \"tsp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"generalQuantities\",\n        name: \"generalQuantities\",\n        style: {\n          'display': useState == 3 ? 'block' : 'hidden'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"small\",\n          children: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"medium\",\n          children: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"large\",\n          children: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: props.unit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: props.ingredientName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        let quantity = document.getElementById('quantityClassification').value;\n        let weightQuantities = document.getElementById('weightQuantities').value;\n        let volume = document.getElementById(\"volumeQuantities\").value;\n        let genQuantities = document.getElementById('generalQuantities').value;\n        if (quantity == 'none') {\n          setItemToEdit({\n            ingredientName: props.ingredientName,\n            assumedQuantity: quantity,\n            unit: ''\n          });\n        } else if (quantity == 'weight') {\n          setItemToEdit({\n            ingredientName: props.ingredientName,\n            assumedQuantity: quantity,\n            unit: weightQuantities\n          });\n        } else if (quantity == 'volume') {\n          setItemToEdit({\n            ingredientName: props.ingredientName,\n            assumedQuantity: quantity,\n            unit: volume\n          });\n        }\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(EditAssumedIngredient, \"eBPzw1yb95Z0khHQJtKht+FWmm8=\");\n_c = EditAssumedIngredient;\nvar _c;\n$RefreshReg$(_c, \"EditAssumedIngredient\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EditAssumedIngredient","props","_s","selectedQuantity","setSelectedQuantity","handleQuantityClassification","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","quantity","type","className","id","name","onChange","style","unit","ingredientName","onClick","document","getElementById","weightQuantities","volume","genQuantities","setItemToEdit","assumedQuantity","_c","$RefreshReg$"],"sources":["/Users/joshuasaji/Projects/React Native/project/app/src/components/EditAssumedIngredient.js"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react';\n\nexport default function EditAssumedIngredient(props) {\n  let [ selectedQuantity, setSelectedQuantity ] = useState(0);\n  let handleQuantityClassification = (e) => {\n    if(e.target.value == 'none') setSelectedQuantity(0)\n    else if(e.target.value == 'weight') setSelectedQuantity(1)\n    else if(e.target.value == 'volume') setSelectedQuantity(2)\n    Â else if(e.target.value == 'general') setSelectedQuantity(3)\n  }\n  return (\n    <div>\n        <h1>Edit Recipe</h1>\n        <input value={props.quantity} type='number' />\n        <div className='formFlex'>\n            <select id='quantityClassification' name='quantityClassification' onChange={(e) => handleQuantityClassification(e)}>\n                <option value=\"none\">None</option>\n                <option value=\"weight\">Weight</option>\n                <option value=\"volume\">Volume</option>\n                <option value=\"general\">General</option>\n            </select>\n            <select id='weightQuantities' name='weightQuantities' style={{'display':useState == 1 ? 'block' : 'hidden'}}>\n                <option value=\"kilograms\">kg</option>\n                <option value=\"pounds\">lb</option>\n                <option value=\"grams\">g</option>\n            </select>\n            <select id='volumeQuantities' name='volumeQuantities' style={{'display':useState == 2 ? 'block' : 'hidden'}}>\n                <option value=\"ml\">millileters</option>\n                <option value=\"l\">liters</option>\n                <option value=\"cups\">cups</option>\n                <option value=\"tbsp\">tbsp</option>\n                <option value=\"tsp\">tsp</option>\n            </select>\n            <select id='generalQuantities' name='generalQuantities' style={{'display':useState == 3 ? 'block' : 'hidden'}}>\n                <option value=\"small\">small</option>\n                <option value=\"medium\">medium</option>\n                <option value=\"large\">large</option>\n            </select>\n        </div>\n        <input value={props.unit} />\n        <input value={props.ingredientName} />\n        <button onClick={() =>{ \n            let quantity = document.getElementById('quantityClassification').value\n            let weightQuantities = document.getElementById('weightQuantities').value\n            let volume = document.getElementById(\"volumeQuantities\").value\n            let genQuantities = document.getElementById('generalQuantities').value;\n\n            if (quantity == 'none') {\n                setItemToEdit({ingredientName: props.ingredientName, assumedQuantity: quantity, unit: ''})\n            } \n            else if (quantity=='weight') {\n                setItemToEdit({ingredientName: props.ingredientName, assumedQuantity: quantity, unit: weightQuantities})\n                \n            }\n            \n            else if (quantity=='volume') {\n                setItemToEdit({ingredientName: props.ingredientName, assumedQuantity: quantity, unit: volume})\n                \n            }\n            \n        }}>Submit</button>\n    </div>\n  )\n}\nÂ "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}