{"ast":null,"code":"var _jsxFileName = \"/Users/joshuasaji/Projects/React Native/project/app/src/components/Main.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport RecipeView from \"./RecipeView\";\nimport SelectedRecipe from \"./SelectedRecipe\";\nimport Error from './Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  let [ingredients, setIngredients] = useState(\"\");\n  let [numRecipes, setNumRecipes] = useState(0);\n  let [recipes, setRecipes] = useState([]);\n  let [loading, setLoading] = useState(false);\n  let [experience, setExperience] = useState(\"beginner\");\n  let [selectedRecipe, setSelectedRecipe] = useState(null);\n  let [selectedRecipeIndex, setSelectedRecipeIndex] = useState(-1);\n  let [message, setMessage] = useState(null);\n  let fetchRecipes = () => {\n    if (ingredients == \"\" || numRecipes < 1) {\n      setMessage(\"The ingredients that were provided are not valid.\");\n    } else {\n      setLoading(true);\n      fetch(\"http://localhost:8000/get-recipes\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          ingredients: ingredients,\n          numRecipes: numRecipes,\n          experienceLevel: experience\n        }),\n        headers: {\n          'Content-Type': \"application/json\"\n        }\n      }).then(response => {\n        if (response.status === 200) return response.json();else setMessage(\"An internal server occured, try again.\");\n      }).then(data => {\n        setLoading(false);\n        setRecipes(data);\n      });\n    }\n  };\n  return message !== null ? /*#__PURE__*/_jsxDEV(Error, {\n    message: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 31\n  }, this) : selectedRecipe ? /*#__PURE__*/_jsxDEV(SelectedRecipe, {\n    modifyRecipes: setRecipes,\n    recipeList: recipes,\n    recipe: selectedRecipe,\n    setState: setSelectedRecipe,\n    index: selectedRecipeIndex\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 78\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"michelinGPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter at least three ingredients to generate possible recipes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"ingredients\",\n          name: \"ingredients\",\n          placeholder: \"Ingredients\",\n          onChange: e => setIngredients(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"numRecipes\",\n          name: \"numRecipes\",\n          placeholder: \"# of Recipes\",\n          type: \"number\",\n          onChange: e => setNumRecipes(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"experience\",\n          name: \"experience\",\n          onChange: e => setExperience(e.target.value.toLowerCase()),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"beginner\",\n            children: \"Beginner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"intermediate\",\n            children: \"Intermediate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"advanced\",\n            children: \"Advanced\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit\",\n          onClick: e => fetchRecipes(),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          \"display\": loading ? \"block\" : \"none\"\n        },\n        children: \"Your recipes are being generated behind the scenes. Please wait.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipes-container\",\n      style: {\n        'display': loading ? 'none' : 'block'\n      },\n      children: recipesrecipes.map((recipe_subarray, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipes\",\n          children: recipe_subarray.map((recipe, j) => {\n            return /*#__PURE__*/_jsxDEV(RecipeView, {\n              recipe: recipe,\n              setState: setSelectedRecipe,\n              modifyRecipes: setRecipes,\n              setIndex: setSelectedRecipeIndex,\n              recipeIndex: i * 3 + j\n            }, i * 3 + j, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"DOOUmwklEoPlFxjyU23tfER2T1s=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","RecipeView","SelectedRecipe","Error","jsxDEV","_jsxDEV","Main","_s","ingredients","setIngredients","numRecipes","setNumRecipes","recipes","setRecipes","loading","setLoading","experience","setExperience","selectedRecipe","setSelectedRecipe","selectedRecipeIndex","setSelectedRecipeIndex","message","setMessage","fetchRecipes","fetch","method","body","JSON","stringify","experienceLevel","headers","then","response","status","json","data","fileName","_jsxFileName","lineNumber","columnNumber","modifyRecipes","recipeList","recipe","setState","index","className","children","class","name","placeholder","onChange","e","target","value","type","id","toLowerCase","onClick","style","recipesrecipes","map","recipe_subarray","i","j","setIndex","recipeIndex","_c","$RefreshReg$"],"sources":["/Users/joshuasaji/Projects/React Native/project/app/src/components/Main.js"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport RecipeView from \"./RecipeView\";\nimport SelectedRecipe from \"./SelectedRecipe\"\nimport Error from './Error';\n\nexport default function Main() {\n\n    let [ingredients, setIngredients] = useState(\"\");\n    let [numRecipes, setNumRecipes] = useState(0);\n    let [recipes, setRecipes] = useState([])\n    let [loading, setLoading] = useState(false);\n    let [experience, setExperience] = useState(\"beginner\");\n    let [selectedRecipe, setSelectedRecipe] = useState(null);\n    let [selectedRecipeIndex, setSelectedRecipeIndex] = useState(-1);\n    let [message, setMessage] = useState(null)\n\n    let fetchRecipes = () => {\n        if (ingredients == \"\" || numRecipes < 1) {\n            setMessage(\"The ingredients that were provided are not valid.\");\n        } else {\n            setLoading(true);\n            fetch(\"http://localhost:8000/get-recipes\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                    ingredients: ingredients,\n                    numRecipes: numRecipes,\n                    experienceLevel: experience\n                }),\n                headers: {\n                    'Content-Type': \"application/json\"\n                }\n            })\n                .then(response => {\n                    if (response.status === 200)\n                        return response.json()\n                    else setMessage(\"An internal server occured, try again.\")\n                })\n                .then(data => {\n                    setLoading(false);\n                    setRecipes(data)\n                    \n                })\n        }\n    };\n\n    return message !== null ? <Error message={message} /> : selectedRecipe ? <SelectedRecipe modifyRecipes={setRecipes} recipeList={recipes} recipe={selectedRecipe} setState={setSelectedRecipe} index={selectedRecipeIndex} /> : (\n        <div className=\"container\">\n            <div className=\"header\">\n                <h1>michelinGPT</h1>\n                <p>Enter at least three ingredients to generate possible recipes.</p>\n            </div>\n            <div className=\"body\">\n                <div class=\"form\">\n                    <input className=\"ingredients\" name=\"ingredients\" placeholder=\"Ingredients\" onChange={e => setIngredients(e.target.value)} />\n                    <input className=\"numRecipes\" name=\"numRecipes\" placeholder=\"# of Recipes\" type='number' onChange={e => setNumRecipes(e.target.value)} />\n                    <select id='experience' name='experience' onChange={e => setExperience(e.target.value.toLowerCase())}>\n                        <option value=\"beginner\">Beginner</option>\n                        <option value=\"intermediate\">Intermediate</option>\n                        <option value=\"advanced\">Advanced</option>\n                    </select>\n                    <button className=\"submit\" onClick={e => fetchRecipes()}>Submit</button>\n                </div>\n                <p style={{ \"display\": loading ? \"block\" : \"none\" }}>Your recipes are being generated behind the scenes. Please wait.</p>\n            </div>\n            <div className=\"gap\"></div>\n            <div className=\"recipes-container\" style={{ 'display': loading ? 'none' : 'block' }}>\n                {recipesrecipes.map((recipe_subarray, i) => {\n                    return (<div className=\"recipes\">\n                        {recipe_subarray.map((recipe, j) => {\n                            return <RecipeView recipe={recipe} setState={setSelectedRecipe} key={(i * 3) + j} modifyRecipes={setRecipes} setIndex={setSelectedRecipeIndex} recipeIndex={(i * 3) + j} />\n                        })}\n                    </div>)\n                })}\n            </div>\n        </div>\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}