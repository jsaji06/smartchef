{"ast":null,"code":"var _jsxFileName = \"/Users/joshuasaji/Projects/React Native/project/app/src/components/EditAssumedIngredient.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport '../App.css';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditAssumedIngredient(props) {\n  _s();\n  //   const unit = props.ingredient.unit;\n\n  let [selectedQuantity, setSelectedQuantity] = useState(0);\n  let [ingredient, setIngredient] = useState({});\n  let [unit, setUnit] = useState(\"\");\n  let [name, setName] = useState(\"\");\n  let [quantity, setQuantity] = useState(\"\");\n  useEffect(() => {\n    console.log(props);\n    let ingredientUnit = props.ingredient.unit;\n    console.log(ingredientUnit);\n    setUnit(ingredientUnit);\n    setIngredient(props.ingredient);\n    if (['kgs', 'g', 'lbs'].includes(unit.toLowerCase())) {\n      setSelectedQuantity(1);\n    } else if (['cups', 'tbsp', 'tsp', 'mL', 'L'].includes(unit.toLowerCase())) {\n      setSelectedQuantity(2);\n    } else if (['small', 'medium', 'large'].includes(unit.toLowerCase())) {\n      setSelectedQuantity(3);\n    } else {\n      setSelectedQuantity(0);\n    }\n  }, [props.ingredient.unit]); // Run this whenever the unit changes \n\n  //   let handleQuantityClassification = (e) => {\n  //     console.log(e.target.value)\n  //     if(e.target.value === 'none') setSelectedQuantity(0)\n  //     else if(e.target.value === 'weight') setSelectedQuantity(1)\n  //     else if(e.target.value === 'volume') setSelectedQuantity(2)\n  //      else if(e.target.value === 'general') setSelectedQuantity(3)\n  //   }\n\n  //   let selectQuantityClassification = e => {\n\n  //     if(selectedQuantityInt == 2) e.target.value = 'weight'\n  //   }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: props.style,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: props.ingredient.assumedQuantity,\n      type: \"number\",\n      onChange: e => {\n        let copyIngredient = {\n          ...ingredient\n        };\n        copyIngredient.assumedQuantity = e.target.value;\n        setIngredient(copyIngredient);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formFlex\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: unit,\n        onChange: e => {\n          // let copyIngredient = {...ingredient}\n          // console.log(e.target.value)\n          // copyIngredient.unit = e.target.value\n          // setIngredient(copyIngredient);\n          setUnit(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"kg\",\n          children: \"kg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"lb\",\n          children: \"lb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"g\",\n          children: \"g\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"milliliters\",\n          children: \"milliliters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"liters\",\n          children: \"liters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cups\",\n          children: \"cups\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"tbsp\",\n          children: \"tbsp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"tsp\",\n          children: \"tsp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"small\",\n          children: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"medium\",\n          children: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"large\",\n          children: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: props.ingredient.ingredientName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        let quantity = document.getElementById('quantityClassification').value;\n        let weightQuantities = document.getElementById('weightQuantities').value;\n        let volume = document.getElementById(\"volumeQuantities\").value;\n        let genQuantities = document.getElementById('generalQuantities').value;\n        if (quantity == 'none') {\n          props.setItemToEdit({\n            ingredientName: props.ingredientName,\n            assumedQuantity: quantity,\n            unit: ''\n          });\n        } else if (quantity == 'weight') {\n          props.setItemToEdit({\n            ingredientName: props.ingredientName,\n            assumedQuantity: quantity,\n            unit: weightQuantities\n          });\n        } else if (quantity == 'volume') {\n          props.setItemToEdit({\n            ingredientName: props.ingredientName,\n            assumedQuantity: quantity,\n            unit: volume\n          });\n        } else if (quantity == 'general') {\n          props.setItemToEdit({\n            ingredientName: props.ingredientName,\n            assumedQuantity: quantity,\n            unit: genQuantities\n          });\n        }\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(EditAssumedIngredient, \"9c+iCNLHub5+Oi8x4nkL/ZDQ8DY=\");\n_c = EditAssumedIngredient;\nvar _c;\n$RefreshReg$(_c, \"EditAssumedIngredient\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EditAssumedIngredient","props","_s","selectedQuantity","setSelectedQuantity","ingredient","setIngredient","unit","setUnit","name","setName","quantity","setQuantity","console","log","ingredientUnit","includes","toLowerCase","style","children","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","assumedQuantity","type","onChange","e","copyIngredient","target","value","className","ingredientName","onClick","document","getElementById","weightQuantities","volume","genQuantities","setItemToEdit","_c","$RefreshReg$"],"sources":["/Users/joshuasaji/Projects/React Native/project/app/src/components/EditAssumedIngredient.js"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react';\nimport '../App.css'\nimport { useEffect } from 'react';\n\nexport default function EditAssumedIngredient(props) {\n//   const unit = props.ingredient.unit;\n\n  let [selectedQuantity, setSelectedQuantity] = useState(0);\n  let [ingredient, setIngredient] = useState({});\n  let [unit, setUnit] = useState(\"\");\n  let [name, setName] = useState(\"\");\n  let [quantity, setQuantity] = useState(\"\");\n  useEffect(() => {\n    console.log(props);\n    let ingredientUnit = props.ingredient.unit;\n    console.log(ingredientUnit)\n    setUnit(ingredientUnit);\n    setIngredient(props.ingredient);\n    if (['kgs', 'g', 'lbs'].includes(unit.toLowerCase())) {\n        setSelectedQuantity(1);\n    } else if (['cups', 'tbsp', 'tsp', 'mL', 'L'].includes(unit.toLowerCase())) {\n        setSelectedQuantity(2);\n    } else if (['small', 'medium', 'large'].includes(unit.toLowerCase())) {\n        setSelectedQuantity(3);\n    } else {\n        setSelectedQuantity(0);\n    }\n    }, [props.ingredient.unit]); // Run this whenever the unit changes \n\n//   let handleQuantityClassification = (e) => {\n//     console.log(e.target.value)\n//     if(e.target.value === 'none') setSelectedQuantity(0)\n//     else if(e.target.value === 'weight') setSelectedQuantity(1)\n//     else if(e.target.value === 'volume') setSelectedQuantity(2)\n//      else if(e.target.value === 'general') setSelectedQuantity(3)\n//   }\n\n//   let selectQuantityClassification = e => {\n\n//     if(selectedQuantityInt == 2) e.target.value = 'weight'\n//   }\n  return (\n    <div style={props.style}>\n        <h1>Edit Recipe</h1>\n        <input defaultValue={props.ingredient.assumedQuantity} type='number' onChange={(e) => {\n            let copyIngredient = {...ingredient};\n            copyIngredient.assumedQuantity = e.target.value;\n            setIngredient(copyIngredient);\n\n        }} />\n        <div className='formFlex'>\n                <select value={unit} onChange={e => {\n                    // let copyIngredient = {...ingredient}\n                    // console.log(e.target.value)\n                    // copyIngredient.unit = e.target.value\n                    // setIngredient(copyIngredient);\n                    setUnit(e.target.value)\n                }}>\n                    <option value=\"kg\">kg</option>\n                    <option value=\"lb\">lb</option>\n                    <option value=\"g\">g</option>\n                    <option value=\"milliliters\">milliliters</option>\n                    <option value=\"liters\">liters</option>\n                    <option value=\"cups\">cups</option>\n                    <option value=\"tbsp\">tbsp</option>\n                    <option value=\"tsp\">tsp</option>\n                    <option value=\"small\">small</option>\n                    <option value=\"medium\">medium</option>\n                    <option value=\"large\">large</option>\n                </select>\n        </div>\n        <input value={props.ingredient.ingredientName} />\n        <button onClick={() =>{ \n            let quantity = document.getElementById('quantityClassification').value\n            let weightQuantities = document.getElementById('weightQuantities').value\n            let volume = document.getElementById(\"volumeQuantities\").value\n            let genQuantities = document.getElementById('generalQuantities').value;\n\n            if (quantity == 'none') {\n                props.setItemToEdit({ingredientName: props.ingredientName, assumedQuantity: quantity, unit: ''})\n            } \n            else if (quantity=='weight') {\n                props.setItemToEdit({ingredientName: props.ingredientName, assumedQuantity: quantity, unit: weightQuantities})\n                \n            }\n            \n            else if (quantity=='volume') {\n                props.setItemToEdit({ingredientName: props.ingredientName, assumedQuantity: quantity, unit: volume})\n                \n            }\n\n            else if (quantity=='general') {\n                props.setItemToEdit({ingredientName: props.ingredientName, assumedQuantity: quantity, unit: genQuantities})\n                \n            }\n            \n        }}>Submit</button>\n    </div>\n  )\n}\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}